Notas :
format long : para mostrar mais casas decimais


Equação nao linear:

	->criar funçao 'func' que faz o mesmo que f(x)
	-> x = fsolve('func' , aproximaçao inicial)
	->se quiser mudar tolerancia:
	op = optimset('TolX',1e-3,'TolFun',1e-4)
	[x,fval,exitflag,output]= fsolve('func', aproximaçao inicial, op)
	->o método converge se exitflag=1



Sistema equaçoes nao lineares:

	function [F] = func (x)
		F[1] = -5*x(1) + 3*sin(x(1)) + cos(x(2));
		F[2] = 4*cos(x(1)) +2*sin(x(2))-5*x(2);
	endfunction
	[x,fval,exitflag,output] = fsolve('func',[0 0.1])
	Cuidado que o filename tem de ser 'func'
	op = optimset('TolX',1e-3, 'TolFun',1e-2)
	-> Converge se o exit flag for = 1;



Polinomio Interporlar de Newton:

	-> ver o grau do polinomio e escolher os 'n+1' pontos mais proximos!
	[P,S] = polyfit (x,y,n)  n é o grau do polinomio
	P vai ter os coeficientes do polinomio, S vai ter o erro de newton
	z = polyval(P,x) , z fica com f(x)


Splines:

	x=[...]
	y=[...]

	s= spline(x,y)		-> mostra-nos os coeficientes todos (aqui nao falam em declives e/ou derivadas)
	z= spline(x,y,20)	-> calcula o valor da spline em x=20

	s.coefs mostra os coeficientes da spline

	Ao escrever a linha temos que por do tipo a(x-2.2)^3,sendo 2.2 o limite inferior

	sc= spline (x, [dd0 y ddn]) para que as curvaturas nos extremos sejam dd0 e ddn

	Se falar em spline completa ou em derivadas:

		->se temos as derivadas entao usamos todos os pontos da tabela.
		->se temos a funçao, calcular a derivada e tiramos f'0 e f'n, usamos todos os pontos da tabela
		->se não temos as derivadas nem a funçao, tiramos a 'x' e 'y' o 2º e penultimo elementos e usamo-los para calcular f'0 e f'n(dd0 ddn)
		(o segmento em que o nosso valor vai ficar pode ser diferente de se tivessemos usado todos os pontos)




Integraçao Numérica:

	x=[...] y=[...] z=trapz(x,y) ->calcula qlq integral de uma tabela

	function [F]=teste(x)
	F=exp(x)./x; 

	quad(’teste’,a,b,1.e-20) -> estipula a tolerância do erro absoluto=1.e-20, entre o intervalo [a;b]
	->usamos este comando quando temos a funçao que queremos integrar


	Se nos der uma funçao e disser para calcular o integral usando n pontos temos de usar os pontos espaçados
	por (b-a)/(n-1) porque n-1 é o numero de intervalos e usar o trapz

	->quad('1./x',1,2) posso definir a funçao logo ali, o '.' vem antes de / ^ *

